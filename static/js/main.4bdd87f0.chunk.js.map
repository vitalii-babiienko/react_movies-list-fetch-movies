{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","setMovie","isMovieLoading","setIsMovieLoading","isMovieListed","setIsMovieListed","hasError","setHasError","clear","onSubmit","e","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","trim","onClick","newMovie","some","prevMovie","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bdd87f0.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  movies: Movie[];\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  addMovie,\n}) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isMovieLoading, setIsMovieLoading] = useState(false);\n  const [isMovieListed, setIsMovieListed] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const clear = () => {\n    setMovie(null);\n    setQuery('');\n    setIsMovieLoading(false);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setHasError(false);\n    setIsMovieListed(false);\n  };\n\n  const handleAddMovie = (newMovie: Movie) => {\n    if (movies.some(prevMovie => prevMovie.imdbId === newMovie.imdbId)) {\n      setIsMovieListed(true);\n      clear();\n    } else {\n      addMovie(newMovie);\n      clear();\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsMovieLoading(true);\n\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          setHasError(true);\n        } else {\n          setMovie({\n            title: response.Title,\n            description: response.Plot,\n            imgUrl: response.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : response.Poster,\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n            imdbId: response.imdbID,\n          });\n        }\n      })\n      .finally(() => setIsMovieLoading(false));\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title!\n            </p>\n          )}\n\n          {isMovieListed && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              This movie is already listed!\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isMovieLoading },\n              )}\n              disabled={query.trim() === ''}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddMovie(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a7a89368';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const addMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}